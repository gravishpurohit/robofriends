{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","containers/App.js","containers/reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","Robot","map","user","i","Searchbox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","console","log","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","filteredrobots","this","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACtB,OACI,sBAAKC,UAAY,sCAAjB,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACxB,gCACA,6BAAKF,IACL,4BAAIC,WCOGK,EAZE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChB,OACI,8BACIA,EAAMC,KAAI,SAACC,EAAMC,GACb,OACA,cAAC,EAAD,CAAeR,GAAIK,EAAMG,GAAGR,GAAIF,KAAMO,EAAMG,GAAGV,KAAMC,MAAOM,EAAMG,GAAGT,OAAzDS,SCEbC,EARG,SAAC,GACnB,EADoBC,YACnB,IAD+BC,EAChC,EADgCA,aAE5B,OACI,qBAAKV,UAAW,OAAhB,SACJ,uBAAOA,UAAW,0BAA0BW,KAAM,SAASC,YAAY,eAAeC,SAAWH,OCGtFI,EATA,SAACC,GAEZ,OADAC,QAAQC,IAAIF,GAER,qBAAKG,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAkBC,OAAO,SAAlE,SACKN,EAAMO,YCoCJC,G,wDAjCb,aAAe,IAAD,8BACZ,gBAWFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAACjB,YAAagB,EAAME,OAAOC,SAXzC,EAAKC,MAAQ,CACXzB,MAAO,GACPK,YAAa,IAJH,E,qDAOd,WAAoB,IAAD,OACjBqB,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC3EF,MAAK,SAAAG,GAAU,EAAKR,SAAS,CAACtB,MAAM8B,S,oBAMzC,WAAU,IAAD,OACDC,EAAiBC,KAAKP,MAAMzB,MAAMiC,QAAO,SAAAjC,GAC7C,OAAOA,EAAMP,KAAKyC,cAAcC,SAAS,EAAKV,MAAMpB,YAAY6B,kBAGlE,OACE,sBAAKtC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAc0B,KAAKZ,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUpB,MAAO+B,a,GA1BTK,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d00baec2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name,email,id}) => {\n    return (\n        <div className = 'bg-light-green dib br3 pa2 ma2 grow'>\n            <img alt='robot' src={`https://robohash.org/${id}?200*200`}/>\n        <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n        </div>\n        </div>\n    );\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ Robot }) => {\n    return (\n        <div>{\n            Robot.map((user, i) => {\n                return (\n                <Card key ={i} id={Robot[i].id} name={Robot[i].name} email={Robot[i].email} />\n                );\n            })\n        }\n        </div>\n    );\n}\nexport default CardList;","import React from 'react';\n\nconst Searchbox = ({searchfield,searchChange}) =>\n{\n    return(\n        <div className ='pa2 '>\n    <input className ='pa2 ba bg-lightest-blue' type ='search' placeholder='robot search' onChange ={searchChange}/>\n    </div>\n);\n}\nexport default Searchbox","const Scroll = (props) =>{\n    console.log(props);\n    return (\n        <div style={{overflowY: 'scroll', border:'1px solid black',height:'620px'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, { Component } from 'react';\nimport CardList from '../components/CardList'\nimport Searchbox from '../components/Searchbox'\nimport Scroll from '../components/Scroll'\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      Robot: [],\n      searchfield: ''\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json())\n      .then(users => {this.setState({Robot:users})})\n  }\n\n  onSearchChange = (event) => {\n    this.setState({searchfield: event.target.value })\n  }\n  render() {\n    const filteredrobots = this.state.Robot.filter(Robot => {\n      return Robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    })\n\n    return (\n      <div className='tc'>\n        <h1 className='f1'>Robofriends</h1>\n        <Searchbox searchChange={this.onSearchChange} />\n        <Scroll>\n          <CardList Robot={filteredrobots} />\n        </Scroll>\n      </div>\n    );\n  \n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './containers/reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}